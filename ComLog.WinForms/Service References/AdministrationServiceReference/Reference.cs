//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ComLog.WinForms.AdministrationServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/Belitsoft.Insignia.EPM.Administration.Ser" +
        "vice.Entities")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] RolesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Roles {
            get {
                return this.RolesField;
            }
            set {
                if ((object.ReferenceEquals(this.RolesField, value) != true)) {
                    this.RolesField = value;
                    this.RaisePropertyChanged("Roles");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AdministrationServiceReference.IAdministrationService")]
    public interface IAdministrationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrationService/Authenticate", ReplyAction="http://tempuri.org/IAdministrationService/AuthenticateResponse")]
        string[] Authenticate(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrationService/Authenticate", ReplyAction="http://tempuri.org/IAdministrationService/AuthenticateResponse")]
        System.Threading.Tasks.Task<string[]> AuthenticateAsync(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrationService/GetUsers", ReplyAction="http://tempuri.org/IAdministrationService/GetUsersResponse")]
        ComLog.WinForms.AdministrationServiceReference.User[] GetUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrationService/GetUsers", ReplyAction="http://tempuri.org/IAdministrationService/GetUsersResponse")]
        System.Threading.Tasks.Task<ComLog.WinForms.AdministrationServiceReference.User[]> GetUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrationService/GetRoles", ReplyAction="http://tempuri.org/IAdministrationService/GetRolesResponse")]
        string[] GetRoles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrationService/GetRoles", ReplyAction="http://tempuri.org/IAdministrationService/GetRolesResponse")]
        System.Threading.Tasks.Task<string[]> GetRolesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrationService/CreateUser", ReplyAction="http://tempuri.org/IAdministrationService/CreateUserResponse")]
        string CreateUser(ComLog.WinForms.AdministrationServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrationService/CreateUser", ReplyAction="http://tempuri.org/IAdministrationService/CreateUserResponse")]
        System.Threading.Tasks.Task<string> CreateUserAsync(ComLog.WinForms.AdministrationServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrationService/UpdateUser", ReplyAction="http://tempuri.org/IAdministrationService/UpdateUserResponse")]
        void UpdateUser(ComLog.WinForms.AdministrationServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrationService/UpdateUser", ReplyAction="http://tempuri.org/IAdministrationService/UpdateUserResponse")]
        System.Threading.Tasks.Task UpdateUserAsync(ComLog.WinForms.AdministrationServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrationService/DeleteUser", ReplyAction="http://tempuri.org/IAdministrationService/DeleteUserResponse")]
        bool DeleteUser(string userLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrationService/DeleteUser", ReplyAction="http://tempuri.org/IAdministrationService/DeleteUserResponse")]
        System.Threading.Tasks.Task<bool> DeleteUserAsync(string userLogin);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAdministrationServiceChannel : ComLog.WinForms.AdministrationServiceReference.IAdministrationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AdministrationServiceClient : System.ServiceModel.ClientBase<ComLog.WinForms.AdministrationServiceReference.IAdministrationService>, ComLog.WinForms.AdministrationServiceReference.IAdministrationService {
        
        public AdministrationServiceClient() {
        }
        
        public AdministrationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AdministrationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdministrationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdministrationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] Authenticate(string login, string password) {
            return base.Channel.Authenticate(login, password);
        }
        
        public System.Threading.Tasks.Task<string[]> AuthenticateAsync(string login, string password) {
            return base.Channel.AuthenticateAsync(login, password);
        }
        
        public ComLog.WinForms.AdministrationServiceReference.User[] GetUsers() {
            return base.Channel.GetUsers();
        }
        
        public System.Threading.Tasks.Task<ComLog.WinForms.AdministrationServiceReference.User[]> GetUsersAsync() {
            return base.Channel.GetUsersAsync();
        }
        
        public string[] GetRoles() {
            return base.Channel.GetRoles();
        }
        
        public System.Threading.Tasks.Task<string[]> GetRolesAsync() {
            return base.Channel.GetRolesAsync();
        }
        
        public string CreateUser(ComLog.WinForms.AdministrationServiceReference.User user) {
            return base.Channel.CreateUser(user);
        }
        
        public System.Threading.Tasks.Task<string> CreateUserAsync(ComLog.WinForms.AdministrationServiceReference.User user) {
            return base.Channel.CreateUserAsync(user);
        }
        
        public void UpdateUser(ComLog.WinForms.AdministrationServiceReference.User user) {
            base.Channel.UpdateUser(user);
        }
        
        public System.Threading.Tasks.Task UpdateUserAsync(ComLog.WinForms.AdministrationServiceReference.User user) {
            return base.Channel.UpdateUserAsync(user);
        }
        
        public bool DeleteUser(string userLogin) {
            return base.Channel.DeleteUser(userLogin);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteUserAsync(string userLogin) {
            return base.Channel.DeleteUserAsync(userLogin);
        }
    }
}
